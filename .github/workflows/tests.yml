name: Jupyter Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  linting:
    name: Linting
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          # requites to grab the history of the PR
          fetch-depth: 0

      - uses: actions/setup-python@v4
        with:
          cache: 'pip'

      - uses: pre-commit/action@v3.0.0
        with:
          extra_args: --color=always --from-ref ${{ github.event.pull_request.base.sha }} --to-ref ${{ github.event.pull_request.head.sha }}

  test:
    name: Run tests
    timeout-minutes: 60
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Base Setup
        uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1
        with:
          python_version: "3.10"
          node_version: "20.x"
          dependency_type: "standard"

      - name: Install Node dependencies
        run: npm install -g yarn && yarn

      - name: Install Playwright Browsers
        run: yarn playwright install --with-deps

      - name: Run tests
        run: hatch run test:jupyter

      # Even if the tests fail, we want to generate the report
      - name: Generate Playwright report
        run: hatch run ci:combine-reports
        if: ${{ !cancelled() }}

      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  docs:
    name: Test documentation
    runs-on: ubuntu-latest
    # Only for PR
    if:
        github.event_name == 'pull_request'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Base Setup
        uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1
        with:
          python_version: "3.10"
          node_version: "20.x"
          dependency_type: "standard"

      - name: Build docs
        run: hatch -e docs run mkdocs build
